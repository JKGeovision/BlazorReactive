@using BlazorReactive.ViewModels;
@using ReactiveUI;
@using ReactiveUI.Blazor;
@inherits ReactiveComponentBase<BodyViewModel>;

@if (ViewModel != null)
{
	<div style="display: flex; flex-direction: row; gap: 1rem;">
		<BodySidebar BodyViewModel="@ViewModel" />
		<div style="display: flex; flex-direction: column; gap: 1rem;">
			@foreach (string item in ViewModel.FilteredItems)
			{
				<div>@item</div>
			}
		</div>
	</div>
}

@code {

	private IDisposable? _filteredItemsSubscription;

	protected override void OnParametersSet()
	{
		_filteredItemsSubscription = ViewModel
			.WhenAnyValue(x => x.FilteredItems)
			.Subscribe(_ =>
			{
				StateHasChanged();
			});

		base.OnParametersSet();
	}

	protected override void Dispose(bool disposing)
	{
		_filteredItemsSubscription?.Dispose();
		base.Dispose(disposing);
	}

}
